@startuml Component_Diagram
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

title Servicio de Dispositivos IoT - Diagrama de Componentes

Container(mobile_app, "App Móvil", "React Native", "App para monitoreo")
Container(web_dashboard, "Dashboard Web", "React.js", "Panel administrativo")
ContainerDb(postgres_db, "PostgreSQL", "Base de Datos", "Datos operacionales")
ContainerDb(influx_db, "InfluxDB", "Time Series DB", "Datos de sensores")
Container(mqtt_broker, "MQTT Broker", "Mosquitto", "Comunicación con dispositivos")
Container(notification_service, "Servicio Notificaciones", "Node.js", "Envío de alertas")

Container_Boundary(device_service, "Servicio de Dispositivos") {
    Component(api_controller, "API Controller", "FastAPI", "Endpoints REST para dispositivos")
    Component(device_manager, "Device Manager", "Python Class", "Lógica de negocio para dispositivos")
    Component(data_validator, "Data Validator", "Pydantic", "Validación de datos de sensores")
    Component(mqtt_handler, "MQTT Handler", "Paho MQTT", "Maneja comunicación MQTT")
    Component(alert_engine, "Alert Engine", "Python Class", "Detecta condiciones de alerta")
    Component(device_repository, "Device Repository", "SQLAlchemy", "Acceso a datos de dispositivos")
    Component(sensor_repository, "Sensor Repository", "InfluxDB Client", "Acceso a datos de sensores")
    Component(auth_middleware, "Auth Middleware", "JWT", "Autenticación y autorización")
}

System_Ext(iot_devices, "Dispositivos IoT", "Sensores ESP32")

' Relaciones externas
Rel(mobile_app, api_controller, "Llamadas API", "HTTPS/REST")
Rel(web_dashboard, api_controller, "Llamadas API", "HTTPS/REST")
Rel(iot_devices, mqtt_handler, "Envía datos", "MQTT")

' Flujo interno
Rel(api_controller, auth_middleware, "Autentica", "")
Rel(auth_middleware, device_manager, "Autoriza", "")
Rel(device_manager, data_validator, "Valida datos", "")
Rel(device_manager, device_repository, "CRUD operations", "")
Rel(device_manager, alert_engine, "Check conditions", "")

Rel(mqtt_handler, data_validator, "Valida payload", "")
Rel(data_validator, sensor_repository, "Store data", "")
Rel(alert_engine, notification_service, "Send alert", "HTTP/REST")

' Acceso a datos
Rel(device_repository, postgres_db, "Query/Update", "SQL")
Rel(sensor_repository, influx_db, "Write/Read", "InfluxQL")

@enduml